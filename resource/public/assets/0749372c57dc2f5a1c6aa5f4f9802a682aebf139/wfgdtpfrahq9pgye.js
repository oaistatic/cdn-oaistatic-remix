import{a2 as m,j as g,r as x,k as E}from"./lklglvrzltpv3f05.js";import{H as f}from"./ntw4l0fkgqdiln85.js";import{D as a,fM as p}from"./ltrr4mhf6s4m7a72.js";const l=async e=>{await E.signOut({callbackUrl:e}),p()},i=(e,r)=>{l(e).then(()=>a.addTiming("chatgpt.web.logout.shouldClearIndexedDB")).catch(n=>{a.addError(new Error("Failed to logout",{cause:n}))})};function h({federatedLogoutUri:e}){const{isFannyPackInitializerEnabled:r}=f();return x.useEffect(()=>{const n=e??window.location.origin;window&&window.indexedDB&&r&&typeof window.indexedDB.databases=="function"?(a.addAction("chatgpt.web.logout.clearIndexedDB"),(async()=>{const u=(await window.indexedDB.databases()).map(o=>new Promise((t,w)=>{if(o.name){const d=window.indexedDB.deleteDatabase(o.name);d.onsuccess=()=>t(),d.onerror=D=>{a.addError(new Error(`Delete IndexedDB failed for database ${o.name}, ${D}`)),w()},d.onblocked=()=>{a.addError(new Error(`Delete IndexedDB blocked for database ${o.name}`)),t()}}else a.addError(new Error(`Invalid database name ${o.name}`)),t()}));await Promise.all(u)})().then(()=>{a.addTiming("chatgpt.web.logout.clearedIndexedDB"),i(n)}).catch(c=>{a.addError(new Error("Failed to clear IndexedDB",{cause:c})),i(n)})):l(e??window.location.origin).catch(s=>a.addError(new Error("Failed to logout",{cause:s})))},[r,e]),null}function k(){const e=m();return g.jsx(h,{...e})}export{k as default};
//# sourceMappingURL=wfgdtpfrahq9pgye.js.map
